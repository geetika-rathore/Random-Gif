[{"C:\\Users\\91774\\Desktop\\react\\gif\\src\\index.js":"1","C:\\Users\\91774\\Desktop\\react\\gif\\src\\App.js":"2","C:\\Users\\91774\\Desktop\\react\\gif\\src\\components\\Random.js":"3","C:\\Users\\91774\\Desktop\\react\\gif\\src\\components\\Tag.js":"4","C:\\Users\\91774\\Desktop\\react\\gif\\src\\components\\Spinner.js":"5","C:\\Users\\91774\\Desktop\\react\\gif\\src\\hooks\\useGif.js":"6"},{"size":254,"mtime":1690863666067,"results":"7","hashOfConfig":"8"},{"size":548,"mtime":1690878098470,"results":"9","hashOfConfig":"8"},{"size":1033,"mtime":1690899301918,"results":"10","hashOfConfig":"8"},{"size":1364,"mtime":1690898211791,"results":"11","hashOfConfig":"8"},{"size":139,"mtime":1690877343275,"results":"12","hashOfConfig":"8"},{"size":708,"mtime":1690881213161,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"5yfmtl",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\91774\\Desktop\\react\\gif\\src\\index.js",[],[],[],"C:\\Users\\91774\\Desktop\\react\\gif\\src\\App.js",[],[],"C:\\Users\\91774\\Desktop\\react\\gif\\src\\components\\Random.js",["36","37"],[],"import React from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport useGif from \"../hooks/useGif\";\r\nconst API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\nexport default function Random() {\r\n\r\nconst {gif,loading,fetchData} = useGif();\r\n\r\n  return (\r\n    <div className=\" flex flex-col w-1/2 mt-[15px] items-center rounded-md bg-transparent gap-y-5 border border-b-gray-50 justify-center hover:bg-gradient-to-r from-blue-300 to-cyan-400 ... shadow-lg\">\r\n      <h1 className=\" text-bold text-2xl uppercase text-black  mt-[30px] \">\r\n        A Random GIF\r\n      </h1>\r\n      {\r\n        loading ?\r\n         (<Spinner />) : (\r\n\r\n          <img src={gif} width=\"450px\"  className=\" rounded-lg \"\r\n          height={300}\r\n          />\r\n        ) \r\n      }\r\n      <button\r\n        className=\"w-10/12 mb-[20px]  border border-bg-gray-500 text-lg py-2 rounded-lg hover:bg-black text-white transition-all duration-200 \"\r\n        onClick={()=>{\r\n          fetchData();\r\n        }}\r\n      >\r\n        Generate\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\91774\\Desktop\\react\\gif\\src\\components\\Tag.js",["38","39"],[],"import React, { useState } from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport useGif from \"../hooks/useGif\";\r\nconst API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\nexport default function Tag() {\r\n  const [tag,setTag] =useState(\"\");\r\nconst {gif,loading,fetchData}= useGif(tag);\r\n  return (\r\n    <div className=\" flex flex-col w-1/2 mt-[15px] mb-[30px] items-center rounded-md bg-transparent gap-y-5 border border-b-gray-50 justify-center hover:bg-gradient-to-r from-blue-300 to-cyan-400 ... shadow-lg\">\r\n      <h1 className=\" text-bold text-2xl uppercase text-black  mt-[30px] \">\r\n        A {tag} GIF\r\n      </h1>\r\n      {\r\n        loading ?\r\n         (<Spinner />) : (\r\n\r\n          <img src={gif} width=\"450px\"  className=\" rounded-lg \"\r\n          height={300}\r\n          />\r\n        ) \r\n      }\r\n\r\n      <input type=\"text\" className=\"w-10/12 text-lg py-2  bg-transparent border ring-1 text-center text-black rounded-lg \"\r\n         placeholder=\"Search your Desired GIF\"\r\n       value={tag} onChange={(event)=>{\r\n        setTag(event.target.value);\r\n       }}\r\n      />\r\n      <button\r\n        className=\"w-10/12 mb-[20px]  border border-bg-gray-500 text-lg py-2 rounded-lg hover:bg-black text-white transition-all duration-200 \"\r\n        onClick={()=>{\r\n          fetchData(tag);\r\n        }}\r\n      >\r\n        Generate\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\91774\\Desktop\\react\\gif\\src\\components\\Spinner.js",[],[],"C:\\Users\\91774\\Desktop\\react\\gif\\src\\hooks\\useGif.js",["40","41"],[],"import React ,{useState ,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nconst API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\nconst url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\nconst useGif = (tag) => {\r\n    const [gif, setGif] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    async function fetchData() {\r\n        setLoading(true);\r\n        const { data } = await axios.get(tag ? `${url}&tag=${tag}`  : url);\r\n        const imageApi = data.data.images.downsized_large.url;\r\n        setGif(imageApi);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    return{gif,loading,fetchData};\r\n}\r\nexport default useGif;",{"ruleId":"42","severity":1,"message":"43","line":4,"column":7,"nodeType":"44","messageId":"45","endLine":4,"endColumn":14},{"ruleId":"46","severity":1,"message":"47","line":18,"column":11,"nodeType":"48","endLine":20,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":4,"column":7,"nodeType":"44","messageId":"45","endLine":4,"endColumn":14},{"ruleId":"46","severity":1,"message":"47","line":17,"column":11,"nodeType":"48","endLine":19,"endColumn":13},{"ruleId":"42","severity":1,"message":"49","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":17,"column":8,"nodeType":"52","endLine":17,"endColumn":10,"suggestions":"53"},"no-unused-vars","'API_KEY' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [fetchData]",{"range":"57","text":"58"},[641,643],"[fetchData]"]